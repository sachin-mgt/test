<?php
 namespace Mgt\Varnish\Block\Adminhtml\System; class CheckCronJob extends \Magento\Backend\Block\Template { const CACHE_WARMER_CACHE_KEY = "\115\147\x74\103\x61\143\150\x65\x57\141\x72\x6d\x65\x72"; const CRON_WARNING_MESSAGE_MINUTES = 10; protected $cache; protected $varnishConfig; protected $config; protected $directoryList; public function __construct(\Magento\Backend\Block\Template\Context $context, \Magento\Framework\App\Filesystem\DirectoryList $directoryList, \Mgt\Varnish\Model\Cache\Backend\File $cache, \Magento\Framework\App\Config $config, \Mgt\Varnish\Model\Cache\Config $varnishConfig, array $data = []) { goto Ea47f; Ee919: $this->varnishConfig = $varnishConfig; goto D750e; f9a09: $this->directoryList = $directoryList; goto a0081; Ea47f: parent::__construct($context, $data); goto f9a09; C7bca: $this->config = $config; goto Ee919; a0081: $this->cache = $cache; goto C7bca; D750e: } public function isVarnishEnabled() { $isVarnishEnabled = $this->varnishConfig->isEnabled(); return $isVarnishEnabled; } public function isCacheWarmerEnabled() { $isCacheWarmerEnabled = $this->varnishConfig->isCacheWarmerEnabled(); return $isCacheWarmerEnabled; } public function showCronNotRunningMessage() { goto c5412; Cf9a8: cba03: goto F3cb8; a8235: $now = new \DateTime("\156\157\167", new \DateTimeZone("\125\124\103")); goto C3c3d; fbdc7: $lastRunning->setTimezone(new \DateTimeZone("\x55\x54\103")); goto a747b; cb176: if (0 == $lastRunningTimestamp) { goto cba03; } goto a8235; B368c: A6008: goto cb564; aa619: $showCronNotRunningMessage = true; goto a3e33; cb564: Cfc9c: goto ceabe; ca9a4: $dateDiff = $now->diff($lastRunning); goto E42a5; e1149: if (!(true === $isVarnishEnabled && true === $isCacheWarmerEnabled)) { goto Cfc9c; } goto A983b; A983b: $lastRunningTimestamp = $this->getLastRunningTimestamp(); goto cb176; a747b: $lastRunning->setTimestamp($lastRunningTimestamp); goto ca9a4; C3c3d: $lastRunning = new \Datetime(); goto fbdc7; D1dcd: $isCacheWarmerEnabled = $this->isCacheWarmerEnabled(); goto e1149; E42a5: $totalMinutes = $dateDiff->days * 24 * 60; goto fb9b6; f431a: goto A6008; goto Cf9a8; fb9b6: $totalMinutes += $dateDiff->h * 60; goto ab9d4; ceabe: return $showCronNotRunningMessage; goto dd1a9; a3e33: bc5e2: goto f431a; F3cb8: $showCronNotRunningMessage = true; goto B368c; ab9d4: $totalMinutes += $dateDiff->i; goto ceb58; Ff0d7: $isVarnishEnabled = $this->isVarnishEnabled(); goto D1dcd; ceb58: if (!($totalMinutes >= self::CRON_WARNING_MESSAGE_MINUTES)) { goto bc5e2; } goto aa619; c5412: $showCronNotRunningMessage = false; goto Ff0d7; dd1a9: } protected function getLastRunningTimestamp() { $lastRunningTimestamp = (int) $this->cache->load(self::CACHE_WARMER_CACHE_KEY); return $lastRunningTimestamp; } public function getCronJobCommand() { $cronJobCommand = sprintf("\x70\150\160\40\x25\x73\x2f\x62\x69\156\x2f\x6d\x61\x67\x65\x6e\x74\x6f\40\x6d\x67\x74\x2d\x76\141\162\156\x69\x73\150\x3a\x63\141\x63\x68\145\x2d\x77\141\162\155\x65\162", $this->directoryList->getRoot()); return $cronJobCommand; } }
