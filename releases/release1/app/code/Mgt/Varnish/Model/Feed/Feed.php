<?php
 namespace Mgt\Varnish\Model\Feed; use Magento\Framework\Config\ConfigOptionsListConstants; use Laminas\Http\Client as HttpClient; class Feed extends \Magento\Framework\Model\AbstractModel { const FEED_URL = "\x68\164\164\x70\x3a\57\x2f\x66\145\x65\144\56\x6d\147\164\55\143\157\155\x6d\x65\x72\x63\x65\x2e\143\157\155\57"; const UPDATE_FREQUENCY = 21600; const SEVERITY_INFORMATION = 4; protected $backendConfig; protected $inboxFactory; protected $storeManager; protected $deploymentConfig; protected $productMetadata; protected $urlBuilder; public function __construct(\Magento\Framework\Model\Context $context, \Magento\Framework\Registry $registry, \Magento\Backend\App\ConfigInterface $backendConfig, \Magento\AdminNotification\Model\InboxFactory $inboxFactory, \Magento\Store\Model\StoreManagerInterface $storeManager, \Magento\Framework\App\DeploymentConfig $deploymentConfig, \Magento\Framework\App\ProductMetadataInterface $productMetadata, \Magento\Framework\UrlInterface $urlBuilder, \Magento\Framework\Model\ResourceModel\AbstractResource $resource = null, \Magento\Framework\Data\Collection\AbstractDb $resourceCollection = null, array $data = []) { goto f4afb; f4afb: parent::__construct($context, $registry, $resource, $resourceCollection, $data); goto D3a40; Ef251: $this->storeManager = $storeManager; goto fc9a9; b5420: $this->urlBuilder = $urlBuilder; goto A08a9; c9a0e: $this->inboxFactory = $inboxFactory; goto Ef251; D3a40: $this->backendConfig = $backendConfig; goto c9a0e; fc9a9: $this->deploymentConfig = $deploymentConfig; goto d3df9; d3df9: $this->productMetadata = $productMetadata; goto b5420; A08a9: } protected function _construct() { } public function checkUpdate() { goto b89f2; c9a73: return $this; goto A8a9a; D45f0: return $this; goto C4d75; e46c4: Abe0a: goto a5c2a; b89f2: $frequency = $this->getFrequency(); goto E6159; C4d75: a36ff: goto c14ea; cb1da: if (!$feedData) { goto Abe0a; } goto f7e16; D784e: b4942: goto cb1da; F17ba: $feedXml = $this->getFeedData(); goto b6c01; A2eed: foreach ($feedXml->channel->item as $item) { goto d93f6; d93f6: $itemPublicationDate = strtotime((string) $item->pubDate); goto c0314; fdc37: Ca789: goto C029a; bb13f: $feedData[] = ["\163\x65\x76\145\162\x69\x74\x79" => self::SEVERITY_INFORMATION, "\144\x61\164\145\x5f\141\144\x64\x65\x64" => date("\131\x2d\155\x2d\144\40\110\x3a\x69\x3a\x73", $itemPublicationDate), "\x74\151\164\154\x65" => (string) $item->title, "\144\145\x73\x63\162\x69\x70\x74\x69\x6f\156" => (string) $item->description, "\x75\162\x6c" => (string) $item->link]; goto fdc37; c0314: if (!($installDate <= $itemPublicationDate)) { goto Ca789; } goto bb13f; C029a: c2216: goto ffd96; ffd96: } goto D784e; f7e16: $this->inboxFactory->create()->parse(array_reverse($feedData)); goto e46c4; c14ea: $feedData = []; goto F17ba; D994f: if (!($frequency + $lastUpdate > time())) { goto a36ff; } goto D45f0; a5c2a: Ecad6: goto d1e16; b6c01: $installDate = strtotime($this->deploymentConfig->get(ConfigOptionsListConstants::CONFIG_PATH_INSTALL_DATE)); goto ad777; d1e16: $this->setLastUpdate(); goto c9a73; ad777: if (!($feedXml && isset($feedXml->channel) && isset($feedXml->channel->item))) { goto Ecad6; } goto A2eed; E6159: $lastUpdate = $this->getLastUpdate(); goto D994f; A8a9a: } public function getFrequency() { return self::UPDATE_FREQUENCY; } public function getLastUpdate() { return $this->_cacheManager->load("\155\147\164\137\146\x65\x65\144\x5f\x61\144\155\x69\x6e\x5f\x6e\157\164\151\146\x69\x63\141\x74\151\x6f\x6e\x73\x5f\154\x61\163\x74\143\x68\145\x63\153"); } public function setLastUpdate() { $this->_cacheManager->save(time(), "\x6d\x67\x74\137\146\145\x65\x64\x5f\x61\x64\155\151\x6e\x5f\156\x6f\x74\x69\x66\x69\x63\x61\164\x69\157\156\x73\137\x6c\141\x73\x74\x63\150\x65\x63\153"); return $this; } public function getFeedData() { try { goto c6d5b; E37ad: if (!(200 == $response->getStatusCode())) { goto Fa393; } goto Ed296; Eeb2a: Fa393: goto A808f; c6d5b: $xml = ''; goto abe76; abe76: $postParams = ["\163\150\x6f\160\x5f\x75\x72\154" => $this->storeManager->getStore()->getBaseUrl(), "\x76\145\x72\163\x69\x6f\156" => $this->productMetadata->getVersion()]; goto db2cf; Ed296: $xml = new \SimpleXMLElement($response->getBody()); goto Eeb2a; db2cf: $config = ["\141\x64\141\x70\164\145\162" => HttpClient\Adapter\Curl::class, "\x63\165\x72\x6c\x6f\x70\x74\151\x6f\x6e\163" => [CURLOPT_FOLLOWLOCATION => true], "\155\x61\170\x72\x65\144\151\x72\x65\143\164\x73" => 0, "\x74\x69\x6d\x65\x6f\x75\164" => 30]; goto Fb9b0; Dfde4: $httpClient->setParameterPost($postParams); goto eb3e3; eb3e3: $response = $httpClient->send(); goto E37ad; Fb9b0: $httpClient = new HttpClient(self::FEED_URL, $config); goto b3408; b3408: $httpClient->setMethod("\x50\117\x53\x54"); goto Dfde4; A808f: } catch (\Exception $e) { return false; } return $xml; } }
