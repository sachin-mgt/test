<?php
 namespace Mgt\Varnish\Model\Cache; class Config { protected $config; protected $deploymentConfigWriter; protected $deploymentConfigReader; protected $configFactory; protected $storeManager; public function __construct(\Magento\Framework\App\DeploymentConfig\Writer $deploymentConfigWriter, \Magento\Framework\App\DeploymentConfig\Reader $deploymentConfigReader, \Magento\Framework\App\Config $config, \Magento\Config\Model\Config\Factory $configFactory, \Magento\Store\Model\StoreManagerInterface $storeManager) { goto fb250; Ffb06: $this->deploymentConfigReader = $deploymentConfigReader; goto E3d19; E3d19: $this->config = $config; goto bdfdf; a06f6: $this->storeManager = $storeManager; goto fd4f9; fb250: $this->deploymentConfigWriter = $deploymentConfigWriter; goto Ffb06; bdfdf: $this->configFactory = $configFactory; goto a06f6; fd4f9: } public function isEnabled($store = null) { $isEnabled = (bool) $this->getConfigValue("\x6d\x67\164\137\x76\141\x72\156\151\163\150\x2f\155\157\144\165\x6c\145\57\x69\163\137\x65\x6e\x61\x62\154\145\x64", $store); return $isEnabled; } public function getServerList($store = null) { $serverList = array_map("\164\x72\x69\x6d", explode("\54", (string) $this->getConfigValue("\155\x67\164\137\166\141\x72\156\151\163\150\57\x6d\x6f\144\x75\x6c\145\x2f\x73\145\162\x76\x65\162\137\154\151\163\164", $store))); return $serverList; } public function getExcludedRoutes($store = null) { $excludedRoutes = explode("\12", trim((string) $this->getConfigValue("\x6d\147\164\x5f\x76\141\x72\156\x69\163\150\57\x6d\157\x64\165\x6c\145\x2f\145\x78\143\x6c\165\144\145\144\x5f\162\157\165\164\x65\163", $store))); return $excludedRoutes; } public function getExcludedUrls($store = null) { $excludedUrls = explode("\xa", trim((string) $this->getConfigValue("\x6d\x67\164\x5f\x76\x61\162\156\151\163\150\57\x6d\157\144\165\x6c\x65\57\x65\170\143\154\x75\144\145\144\x5f\x75\162\154\x73", $store))); return $excludedUrls; } public function getExcludedParams($store = null) { $excludedParams = array_map("\164\x72\x69\x6d", explode("\54", $this->getConfigValue("\155\x67\164\137\x76\141\162\156\x69\163\150\x2f\155\x6f\x64\165\154\x65\x2f\x65\170\x63\154\165\x64\145\144\x5f\x70\141\162\141\155\163", $store))); return $excludedParams; } public function getDefaultCacheLifetime($store = null) { $defaultCacheLifetime = (int) $this->getConfigValue("\155\x67\164\137\166\x61\162\156\x69\x73\x68\x2f\155\x6f\x64\x75\x6c\x65\x2f\144\145\146\x61\165\154\x74\x5f\x63\141\143\150\x65\137\154\151\x66\145\x74\151\155\145", $store); return $defaultCacheLifetime; } public function isDebugModeEnabled($store = null) { $isDebugModeEnabled = (bool) $this->getConfigValue("\x6d\147\x74\x5f\x76\141\162\x6e\x69\163\x68\x2f\155\x6f\x64\x75\x6c\x65\57\x64\x65\x62\x75\147\x5f\x6d\x6f\144\x65", $store); return $isDebugModeEnabled; } public function getApiSecretKey($store = null) { $apiSecretKey = trim((string) $this->getConfigValue("\155\x67\x74\x5f\x76\x61\162\156\x69\x73\x68\57\155\157\x64\x75\154\145\57\141\160\x69\137\x73\x65\x63\162\145\164\x5f\153\145\x79", $store)); return $apiSecretKey; } public function getRoutesCacheLifetime($store = null) { goto d0ebf; d0ebf: $routesCacheLifetime = trim((string) $this->getConfigValue("\x6d\147\x74\137\x76\141\162\x6e\151\163\150\x2f\x6d\x6f\144\x75\154\145\57\x72\x6f\165\164\145\163\x5f\143\141\143\x68\x65\x5f\x6c\x69\146\x65\x74\151\155\145", $store)); goto B0c29; Afba7: $routesCacheLifetime = (array) $routesCacheLifetime; goto Fb7c2; Fb7c2: return $routesCacheLifetime; goto De52b; B0c29: $routesCacheLifetime = json_decode($routesCacheLifetime, true); goto Afba7; De52b: } public function isCacheWarmerEnabled($store = null) { $isCacheWarmerEnabled = (bool) $this->getConfigValue("\x6d\147\164\x5f\x76\141\162\156\x69\x73\150\x2f\x6d\x6f\144\165\x6c\x65\x2f\143\141\143\x68\145\137\x77\x61\x72\x6d\145\162\137\145\156\x61\142\154\145\144", $store); return $isCacheWarmerEnabled; } public function getCacheWarmerRoutes($store = null) { $cacheWarmerRoutes = array_map("\x74\x72\x69\x6d", explode("\12", trim($this->getConfigValue("\155\147\164\x5f\x76\141\162\156\x69\x73\150\x2f\x6d\x6f\x64\165\154\x65\x2f\x63\141\x63\150\x65\137\x77\141\162\x6d\145\162\137\x72\157\x75\164\145\163", $store)))); return $cacheWarmerRoutes; } public function getNumberOfCacheWarmerThreads($store = null) { $numberOfCacheWarmerThreads = (int) $this->getConfigValue("\155\x67\x74\x5f\166\x61\x72\x6e\x69\x73\x68\x2f\155\x6f\144\165\154\x65\x2f\143\141\143\150\x65\137\x77\x61\x72\x6d\x65\x72\x5f\x74\150\162\x65\141\x64\163", $store); return $numberOfCacheWarmerThreads; } public function getCacheWarmerCpuLimit($store = null) { $cacheWarmerCpuLimit = (int) $this->getConfigValue("\x6d\147\x74\137\166\x61\x72\156\151\163\x68\57\155\x6f\144\x75\x6c\145\x2f\x63\x61\143\x68\145\x5f\167\141\162\x6d\x65\162\137\143\160\x75\137\154\151\155\x69\164", $store); return $cacheWarmerCpuLimit; } public function isCacheWarmerCpuLimitEnabled($store = null) { $isCacheWarmerCpuLimitEnabled = (bool) $this->getConfigValue("\x6d\147\164\x5f\x76\141\162\156\151\163\x68\57\155\x6f\144\x75\154\x65\57\143\x61\x63\x68\145\137\167\x61\162\x6d\145\162\137\143\160\165\x5f\154\x69\155\151\x74\137\145\156\x61\x62\154\145\x64", $store); return $isCacheWarmerCpuLimitEnabled; } protected function getConfigValue($path, $store = null, $scope = \Magento\Store\Model\ScopeInterface::SCOPE_STORE) { goto Fbc97; e20fe: $store = $this->storeManager->getStore(); goto cecb0; Fbc97: if (!(null === $store)) { goto f867e; } goto e20fe; cecb0: f867e: goto Afe74; c230b: return $configValue; goto d9297; Afe74: $configValue = $this->config->getValue($path, $scope, $store); goto c230b; d9297: } }
